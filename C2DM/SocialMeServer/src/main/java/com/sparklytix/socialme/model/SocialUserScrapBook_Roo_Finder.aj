// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.sparklytix.socialme.model;

import com.sparklytix.socialme.model.SocialUser;
import com.sparklytix.socialme.model.SocialUserScrapBook;
import java.util.Date;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect SocialUserScrapBook_Roo_Finder {
    
    public static TypedQuery<SocialUserScrapBook> SocialUserScrapBook.findSocialUserScrapBooksBySocialUser(SocialUser socialUser) {
        if (socialUser == null) throw new IllegalArgumentException("The socialUser argument is required");
        EntityManager em = SocialUserScrapBook.entityManager();
        TypedQuery<SocialUserScrapBook> q = em.createQuery("SELECT o FROM SocialUserScrapBook AS o WHERE o.socialUser = :socialUser", SocialUserScrapBook.class);
        q.setParameter("socialUser", socialUser);
        return q;
    }
    
    public static TypedQuery<SocialUserScrapBook> SocialUserScrapBook.findSocialUserScrapBooksBySocialUserAndCreatedGreaterThan(SocialUser socialUser, Date created) {
        if (socialUser == null) throw new IllegalArgumentException("The socialUser argument is required");
        if (created == null) throw new IllegalArgumentException("The created argument is required");
        EntityManager em = SocialUserScrapBook.entityManager();
        TypedQuery<SocialUserScrapBook> q = em.createQuery("SELECT o FROM SocialUserScrapBook AS o WHERE o.socialUser = :socialUser AND o.created > :created", SocialUserScrapBook.class);
        q.setParameter("socialUser", socialUser);
        q.setParameter("created", created);
        return q;
    }
    
}
