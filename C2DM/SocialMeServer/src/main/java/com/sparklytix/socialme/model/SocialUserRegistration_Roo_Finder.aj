// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.sparklytix.socialme.model;

import com.sparklytix.socialme.model.SocialUser;
import com.sparklytix.socialme.model.SocialUserRegistration;
import java.lang.String;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect SocialUserRegistration_Roo_Finder {
    
    public static TypedQuery<SocialUserRegistration> SocialUserRegistration.findSocialUserRegistrationsByRegistrationIdEquals(String registrationId) {
        if (registrationId == null || registrationId.length() == 0) throw new IllegalArgumentException("The registrationId argument is required");
        EntityManager em = SocialUserRegistration.entityManager();
        TypedQuery<SocialUserRegistration> q = em.createQuery("SELECT o FROM SocialUserRegistration AS o WHERE o.registrationId = :registrationId", SocialUserRegistration.class);
        q.setParameter("registrationId", registrationId);
        return q;
    }
    
    public static TypedQuery<SocialUserRegistration> SocialUserRegistration.findSocialUserRegistrationsBySocialUser(SocialUser socialUser) {
        if (socialUser == null) throw new IllegalArgumentException("The socialUser argument is required");
        EntityManager em = SocialUserRegistration.entityManager();
        TypedQuery<SocialUserRegistration> q = em.createQuery("SELECT o FROM SocialUserRegistration AS o WHERE o.socialUser = :socialUser", SocialUserRegistration.class);
        q.setParameter("socialUser", socialUser);
        return q;
    }
    
}
