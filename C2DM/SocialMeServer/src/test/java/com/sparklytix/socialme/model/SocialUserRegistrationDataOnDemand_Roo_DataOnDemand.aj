// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.sparklytix.socialme.model;

import com.sparklytix.socialme.model.SocialUser;
import com.sparklytix.socialme.model.SocialUserDataOnDemand;
import com.sparklytix.socialme.model.SocialUserRegistration;
import java.lang.String;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect SocialUserRegistrationDataOnDemand_Roo_DataOnDemand {
    
    declare @type: SocialUserRegistrationDataOnDemand: @Component;
    
    private Random SocialUserRegistrationDataOnDemand.rnd = new SecureRandom();
    
    private List<SocialUserRegistration> SocialUserRegistrationDataOnDemand.data;
    
    @Autowired
    private SocialUserDataOnDemand SocialUserRegistrationDataOnDemand.socialUserDataOnDemand;
    
    public SocialUserRegistration SocialUserRegistrationDataOnDemand.getNewTransientSocialUserRegistration(int index) {
        SocialUserRegistration obj = new SocialUserRegistration();
        setRegistrationId(obj, index);
        setSocialUser(obj, index);
        return obj;
    }
    
    public void SocialUserRegistrationDataOnDemand.setRegistrationId(SocialUserRegistration obj, int index) {
        String registrationId = "registrationId_" + index;
        obj.setRegistrationId(registrationId);
    }
    
    public void SocialUserRegistrationDataOnDemand.setSocialUser(SocialUserRegistration obj, int index) {
        SocialUser socialUser = socialUserDataOnDemand.getRandomSocialUser();
        obj.setSocialUser(socialUser);
    }
    
    public SocialUserRegistration SocialUserRegistrationDataOnDemand.getSpecificSocialUserRegistration(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        SocialUserRegistration obj = data.get(index);
        java.lang.Long id = obj.getId();
        return SocialUserRegistration.findSocialUserRegistration(id);
    }
    
    public SocialUserRegistration SocialUserRegistrationDataOnDemand.getRandomSocialUserRegistration() {
        init();
        SocialUserRegistration obj = data.get(rnd.nextInt(data.size()));
        java.lang.Long id = obj.getId();
        return SocialUserRegistration.findSocialUserRegistration(id);
    }
    
    public boolean SocialUserRegistrationDataOnDemand.modifySocialUserRegistration(SocialUserRegistration obj) {
        return false;
    }
    
    public void SocialUserRegistrationDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = SocialUserRegistration.findSocialUserRegistrationEntries(from, to);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'SocialUserRegistration' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<com.sparklytix.socialme.model.SocialUserRegistration>();
        for (int i = 0; i < 10; i++) {
            SocialUserRegistration obj = getNewTransientSocialUserRegistration(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> it = e.getConstraintViolations().iterator(); it.hasNext();) {
                    ConstraintViolation<?> cv = it.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
